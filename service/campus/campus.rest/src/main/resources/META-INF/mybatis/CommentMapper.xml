<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.campus.repository.CommentMapper">
	<resultMap id="BaseResultMap" type="org.campus.model.Comment">
		<id column="UID" property="uid" jdbcType="VARCHAR" />
		<result column="SourceUID" property="sourceuid" jdbcType="VARCHAR" />
		<result column="ComUserUID" property="comuseruid" jdbcType="VARCHAR" />
		<result column="UserNickName" property="usernickname" jdbcType="VARCHAR" />
		<result column="ObjUserUID" property="objuseruid" jdbcType="VARCHAR" />
		<result column="ObjUserNickName" property="objusernickname"
			jdbcType="VARCHAR" />
		<result column="CommentContent" property="commentcontent"
			jdbcType="VARCHAR" />
		<result column="TypeCode" property="typecode" jdbcType="INTEGER" />
		<result column="isActive" property="isactive" jdbcType="INTEGER" />
		<result column="CreateBy" property="createby" jdbcType="VARCHAR" />
		<result column="CreateDate" property="createdate" jdbcType="TIMESTAMP" />
		<result column="LastUpdateBy" property="lastupdateby" jdbcType="VARCHAR" />
		<result column="LastUpdateDate" property="lastupdatedate"
			jdbcType="TIMESTAMP" />
		<result column="IpAddress" property="ipaddress" jdbcType="VARCHAR" />
		<result column="ObjComment" property="objComment" jdbcType="VARCHAR" />
		<result column="SrcPostId" property="srcPostId" jdbcType="VARCHAR" />
		<result column="IsAnonymous" property="isAnonymous" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		UID, SourceUID, ComUserUID, UserNickName, ObjUserUID,
		ObjUserNickName,
		CommentContent,
		TypeCode, isActive, CreateBy,
		CreateDate, LastUpdateBy,
		LastUpdateDate,IpAddress,ObjComment,SrcPostId,IsAnonymous,status
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from ts_app_comment
		where UID = #{uid,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		ts_app_comment
		where UID = #{uid,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="org.campus.model.Comment">
		insert into ts_app_comment
		(UID, SourceUID, ComUserUID,
		UserNickName, ObjUserUID, ObjUserNickName,
		CommentContent, TypeCode, isActive,
		CreateBy, CreateDate, LastUpdateBy,
		LastUpdateDate,IpAddress, ObjComment,SrcPostId,IsAnonymous,status)
		values
		(#{uid,jdbcType=VARCHAR},
		#{sourceuid,jdbcType=VARCHAR},
		#{comuseruid,jdbcType=VARCHAR},
		#{usernickname,jdbcType=VARCHAR},
		#{objuseruid,jdbcType=VARCHAR},
		#{objusernickname,jdbcType=VARCHAR},
		#{commentcontent,jdbcType=VARCHAR}, #{typecode,jdbcType=INTEGER},
		#{isactive,jdbcType=INTEGER},
		#{createby,jdbcType=VARCHAR},
		#{createdate,jdbcType=TIMESTAMP}, #{lastupdateby,jdbcType=VARCHAR},
		#{lastupdatedate,jdbcType=TIMESTAMP},
		#{ipaddress,jdbcType=VARCHAR},#{objComment,jdbcType=VARCHAR},#{srcPostId,jdbcType=VARCHAR},
		#{isAnonymous,jdbcType=INTEGER},#{status,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="org.campus.model.Comment">
		insert into ts_app_comment
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				UID,
			</if>
			<if test="sourceuid != null">
				SourceUID,
			</if>
			<if test="comuseruid != null">
				ComUserUID,
			</if>
			<if test="usernickname != null">
				UserNickName,
			</if>
			<if test="objuseruid != null">
				ObjUserUID,
			</if>
			<if test="objusernickname != null">
				ObjUserNickName,
			</if>
			<if test="commentcontent != null">
				CommentContent,
			</if>
			<if test="typecode != null">
				TypeCode,
			</if>
			<if test="isactive != null">
				isActive,
			</if>
			<if test="createby != null">
				CreateBy,
			</if>
			<if test="createdate != null">
				CreateDate,
			</if>
			<if test="lastupdateby != null">
				LastUpdateBy,
			</if>
			<if test="lastupdatedate != null">
				LastUpdateDate,
			</if>
			<if test="ipaddress != null">
				IpAddress,
			</if>
			<if test="objComment != null">
				ObjComment,
			</if>
			<if test="srcPostId != null">
				SrcPostId,
			</if>
			<if test="isAnonymous != null">
				IsAnonymous,
			</if>
			<if test="status != null">
                status,
            </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				#{uid,jdbcType=VARCHAR},
			</if>
			<if test="sourceuid != null">
				#{sourceuid,jdbcType=VARCHAR},
			</if>
			<if test="comuseruid != null">
				#{comuseruid,jdbcType=VARCHAR},
			</if>
			<if test="usernickname != null">
				#{usernickname,jdbcType=VARCHAR},
			</if>
			<if test="objuseruid != null">
				#{objuseruid,jdbcType=VARCHAR},
			</if>
			<if test="objusernickname != null">
				#{objusernickname,jdbcType=VARCHAR},
			</if>
			<if test="commentcontent != null">
				#{commentcontent,jdbcType=VARCHAR},
			</if>
			<if test="typecode != null">
				#{typecode,jdbcType=INTEGER},
			</if>
			<if test="isactive != null">
				#{isactive,jdbcType=INTEGER},
			</if>
			<if test="createby != null">
				#{createby,jdbcType=VARCHAR},
			</if>
			<if test="createdate != null">
				#{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="lastupdateby != null">
				#{lastupdateby,jdbcType=VARCHAR},
			</if>
			<if test="lastupdatedate != null">
				#{lastupdatedate,jdbcType=TIMESTAMP},
			</if>
			<if test="ipaddress != null">
				#{ipaddress,jdbcType=VARCHAR},
			</if>
			<if test="objComment != null">
				#{objComment,jdbcType=VARCHAR},
			</if>
			<if test="srcPostId != null">
				#{srcPostId,jdbcType=VARCHAR},
			</if>
			<if test="isAnonymous != null">
				#{isAnonymous,jdbcType=INTEGER},
			</if>
			<if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.campus.model.Comment">
		update ts_app_comment
		<set>
			<if test="sourceuid != null">
				SourceUID = #{sourceuid,jdbcType=VARCHAR},
			</if>
			<if test="comuseruid != null">
				ComUserUID = #{comuseruid,jdbcType=VARCHAR},
			</if>
			<if test="usernickname != null">
				UserNickName = #{usernickname,jdbcType=VARCHAR},
			</if>
			<if test="objuseruid != null">
				ObjUserUID = #{objuseruid,jdbcType=VARCHAR},
			</if>
			<if test="objusernickname != null">
				ObjUserNickName = #{objusernickname,jdbcType=VARCHAR},
			</if>
			<if test="commentcontent != null">
				CommentContent = #{commentcontent,jdbcType=VARCHAR},
			</if>
			<if test="typecode != null">
				TypeCode = #{typecode,jdbcType=INTEGER},
			</if>
			<if test="isactive != null">
				isActive = #{isactive,jdbcType=INTEGER},
			</if>
			<if test="createby != null">
				CreateBy = #{createby,jdbcType=VARCHAR},
			</if>
			<if test="createdate != null">
				CreateDate = #{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="lastupdateby != null">
				LastUpdateBy = #{lastupdateby,jdbcType=VARCHAR},
			</if>
			<if test="lastupdatedate != null">
				LastUpdateDate = #{lastupdatedate,jdbcType=TIMESTAMP},
			</if>
			<if test="ipaddress != null">
				IpAddress = #{ipaddress,jdbcType=VARCHAR},
			</if>
			<if test="objComment != null">
				ObjComment = #{objComment,jdbcType=VARCHAR},
			</if>
			<if test="srcPostId != null">
				SrcPostId = #{objComment,jdbcType=VARCHAR},
			</if>
			<if test="isAnonymous != null">
				IsAnonymous = #{isAnonymous,jdbcType=INTEGER},
			</if>
			<if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
		</set>
		where UID = #{uid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.campus.model.Comment">
		update
		ts_app_comment
		set SourceUID = #{sourceuid,jdbcType=VARCHAR},
		ComUserUID = #{comuseruid,jdbcType=VARCHAR},
		UserNickName =
		#{usernickname,jdbcType=VARCHAR},
		ObjUserUID =
		#{objuseruid,jdbcType=VARCHAR},
		ObjUserNickName =
		#{objusernickname,jdbcType=VARCHAR},
		CommentContent =
		#{commentcontent,jdbcType=VARCHAR},
		TypeCode =
		#{typecode,jdbcType=INTEGER},
		isActive = #{isactive,jdbcType=INTEGER},
		CreateBy = #{createby,jdbcType=VARCHAR},
		CreateDate =
		#{createdate,jdbcType=TIMESTAMP},
		LastUpdateBy =
		#{lastupdateby,jdbcType=VARCHAR},
		LastUpdateDate =
		#{lastupdatedate,jdbcType=TIMESTAMP},
		IpAddress =
		#{ipaddress,jdbcType=VARCHAR},
		ObjComment =
		#{objComment,jdbcType=VARCHAR},
		SrcPostId =
		#{srcPostId,jdbcType=VARCHAR},
		IsAnonymous =
		#{isAnonymous,jdbcType=INTEGER},
		status =
        #{status,jdbcType=VARCHAR}
		where UID =
		#{uid,jdbcType=VARCHAR}
	</update>
	<select id="findBySourceId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select *
		from (select
		<include refid="Base_Column_List" />
		from ts_app_comment
		where SourceUID = #{sourceId,jdbcType=VARCHAR} AND
		isActive=1
		UNION
		select
		<include refid="Base_Column_List" />
		from ts_app_comment
		where srcPostId = #{sourceId,jdbcType=VARCHAR} AND
		isActive=1) t order by t.CreateDate desc
	</select>
	<delete id="deleteAll">
		delete from ts_app_comment
	</delete>
	<select id="findMyComments" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ts_app_comment
		where SourceUID = #{sourceId,jdbcType=VARCHAR} AND
		ComUserUID=#{userId,jdbcType=VARCHAR} AND
		isActive=1 order by
		CreateDate desc
	</select>
	<select id="findCommentPostsMsgVO" resultMap="BaseResultMap">
		select c.*
		from
		ts_app_comment as c LEFT JOIN ts_app_freshnews as f ON c.SourceUID =
		f.UID
		where f.AddUserUID = #{userId,jdbcType=VARCHAR} and c.isActive=1
		order by c.CreateDate desc
	</select>
	<select id="findCommentMyCommentMsgVO" resultMap="BaseResultMap">
		select * from
		ts_app_comment
		where ObjUserUID =
		#{userId,jdbcType=VARCHAR} AND
		isActive=1 order by CreateDate desc
	</select>
	<update id="updateComCommentNickName" parameterType="java.lang.String">
	   update ts_app_comment set UserNickName=#{nickName,jdbcType=VARCHAR} 
	   where ComUserUID=#{userId,jdbcType=VARCHAR} and IsAnonymous=0
	</update>
	<update id="updateObjCommentNickName" parameterType="java.lang.String">
       update ts_app_comment set ObjUserNickName=#{nickName,jdbcType=VARCHAR} 
       where ObjUserUID=#{userId,jdbcType=VARCHAR} and IsAnonymous=0
    </update>
    <select id="selectNeedIntegralNum" resultType="int">
        select count(DISTINCT t.IpAddress) from 
        (
            select * from ts_app_comment 
            where SourceUID=#{sourceId,jdbcType=VARCHAR} 
            and CreateDate&gt;=#{checkDate,jdbcType=TIMESTAMP}
            and CreateDate&lt;=#{limitDate,jdbcType=TIMESTAMP}
            UNION
            select * from ts_app_comment 
            where SrcPostId=#{sourceId,jdbcType=VARCHAR} 
            and CreateDate&gt;=#{checkDate,jdbcType=TIMESTAMP}
            and CreateDate&lt;=#{limitDate,jdbcType=TIMESTAMP}
        ) t
    </select>
    <select id="countCommentPostsMsgVO" parameterType="java.lang.String" resultType="int">
        select count(1)
        from
        ts_app_comment as c LEFT JOIN ts_app_freshnews as f ON c.SourceUID =
        f.UID
        where f.AddUserUID = #{userId,jdbcType=VARCHAR} and c.isActive=1
        and status='0'
        order by c.CreateDate desc
    </select>
    <select id="countCommentMyCommentMsgVO" parameterType="java.lang.String" resultType="int">
        select count(1) from
        ts_app_comment
        where ObjUserUID =
        #{userId,jdbcType=VARCHAR} AND
        isActive=1 and status='0' order by CreateDate desc
    </select>
</mapper>