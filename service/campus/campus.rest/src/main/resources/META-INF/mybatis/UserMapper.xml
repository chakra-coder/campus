<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.campus.repository.UserMapper">
	<resultMap id="BaseResultMap" type="org.campus.model.User">
		<id column="UserUID" property="useruid" jdbcType="VARCHAR" />
		<result column="StudentID" property="studentid" jdbcType="VARCHAR" />
		<result column="RealName" property="realname" jdbcType="VARCHAR" />
		<result column="NamePinYin" property="namepinyin" jdbcType="VARCHAR" />
		<result column="NameFirstLetter" property="namefirstletter"
			jdbcType="VARCHAR" />
		<result column="NickName" property="nickname" jdbcType="VARCHAR" />
		<result column="SexType" property="sextype" jdbcType="VARCHAR" />
		<result column="Email" property="email" jdbcType="VARCHAR" />
		<result column="IDCard" property="idcard" jdbcType="VARCHAR" />
		<result column="HeadPic" property="headpic" jdbcType="VARCHAR" />
		<result column="BackGroundImg" property="backgroundimg"
			jdbcType="VARCHAR" />
		<result column="SchoolUID" property="schooluid" jdbcType="VARCHAR" />
		<result column="SchoolName" property="schoolname" jdbcType="VARCHAR" />
		<result column="CollegeUID" property="collegeuid" jdbcType="VARCHAR" />
		<result column="CollegeName" property="collegename" jdbcType="VARCHAR" />
		<result column="ProfessionUID" property="professionuid"
			jdbcType="VARCHAR" />
		<result column="ProfessionName" property="professionname"
			jdbcType="VARCHAR" />
		<result column="InSchoolYear" property="inschoolyear" jdbcType="INTEGER" />
		<result column="CityCode" property="citycode" jdbcType="VARCHAR" />
		<result column="CityName" property="cityname" jdbcType="VARCHAR" />
		<result column="ProvinceCode" property="provincecode" jdbcType="VARCHAR" />
		<result column="ProvinceName" property="provincename" jdbcType="VARCHAR" />
		<result column="IsValidated" property="isvalidated" jdbcType="INTEGER" />
		<result column="IsLocked" property="islocked" jdbcType="INTEGER" />
		<result column="IsOpen" property="isopen" jdbcType="INTEGER" />
		<result column="IsGraduate" property="isgraduate" jdbcType="INTEGER" />
		<result column="CreateBy" property="createby" jdbcType="VARCHAR" />
		<result column="CreateDate" property="createdate" jdbcType="TIMESTAMP" />
		<result column="LastUpdateBy" property="lastupdateby" jdbcType="VARCHAR" />
		<result column="LastUpdateDate" property="lastupdatedate"
			jdbcType="TIMESTAMP" />
		<result column="IsActive" property="isactive" jdbcType="INTEGER" />
		<result column="Integral" property="integral" jdbcType="INTEGER" />
		<result column="LoginCount" property="logincount" jdbcType="INTEGER" />
		<result column="ApiType" property="apiType" jdbcType="VARCHAR" />
		<result column="ApiId" property="apiId" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		UserUID, StudentID, RealName, NamePinYin, NameFirstLetter,
		NickName, SexType,
		Email,
		IDCard, HeadPic, BackGroundImg, SchoolUID,
		SchoolName, CollegeUID,
		CollegeName, ProfessionUID,
		ProfessionName,
		InSchoolYear, CityCode, CityName, ProvinceCode, ProvinceName,
		IsValidated,
		IsLocked, IsOpen, IsGraduate, CreateBy, CreateDate,
		LastUpdateBy,
		LastUpdateDate,
		IsActive,Integral,LoginCount,ApiType,ApiId
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from ts_app_user
		where UserUID = #{useruid,jdbcType=VARCHAR}
	</select>
	<select id="selectByNickName" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from ts_app_user
		where NickName = #{nickName,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		ts_app_user
		where UserUID = #{useruid,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="org.campus.model.User">
		insert into ts_app_user
		(UserUID, StudentID, RealName,
		NamePinYin, NameFirstLetter, NickName,
		SexType, Email, IDCard,
		HeadPic, BackGroundImg, SchoolUID,
		SchoolName,
		CollegeUID, CollegeName,
		ProfessionUID, ProfessionName, InSchoolYear,
		CityCode, CityName, ProvinceCode,
		ProvinceName, IsValidated, IsLocked,
		IsOpen, IsGraduate, CreateBy,
		CreateDate, LastUpdateBy, LastUpdateDate,
		IsActive,Integral,LoginCount,ApiType,ApiId)
		values
		(#{useruid,jdbcType=VARCHAR},
		#{studentid,jdbcType=VARCHAR},
		#{realname,jdbcType=VARCHAR},
		#{namepinyin,jdbcType=VARCHAR},
		#{namefirstletter,jdbcType=VARCHAR},
		#{nickname,jdbcType=VARCHAR},
		#{sextype,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{idcard,jdbcType=VARCHAR},
		#{headpic,jdbcType=VARCHAR},
		#{backgroundimg,jdbcType=VARCHAR},
		#{schooluid,jdbcType=VARCHAR},
		#{schoolname,jdbcType=VARCHAR},
		#{collegeuid,jdbcType=VARCHAR},
		#{collegename,jdbcType=VARCHAR},
		#{professionuid,jdbcType=VARCHAR},
		#{professionname,jdbcType=VARCHAR},
		#{inschoolyear,jdbcType=INTEGER},
		#{citycode,jdbcType=VARCHAR},
		#{cityname,jdbcType=VARCHAR},
		#{provincecode,jdbcType=VARCHAR},
		#{provincename,jdbcType=VARCHAR},
		#{isvalidated,jdbcType=INTEGER},
		#{islocked,jdbcType=INTEGER},
		#{isopen,jdbcType=INTEGER},
		#{isgraduate,jdbcType=INTEGER},
		#{createby,jdbcType=VARCHAR},
		#{createdate,jdbcType=TIMESTAMP},
		#{lastupdateby,jdbcType=VARCHAR},
		#{lastupdatedate,jdbcType=TIMESTAMP},
		#{isactive,jdbcType=INTEGER},#{integral,jdbcType=INTEGER},#{logincount,jdbcType=INTEGER},
		#{apiType,jdbcType=VARCHAR}, #{apiId,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="org.campus.model.User">
		insert into ts_app_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="useruid != null">
				UserUID,
			</if>
			<if test="studentid != null">
				StudentID,
			</if>
			<if test="realname != null">
				RealName,
			</if>
			<if test="namepinyin != null">
				NamePinYin,
			</if>
			<if test="namefirstletter != null">
				NameFirstLetter,
			</if>
			<if test="nickname != null">
				NickName,
			</if>
			<if test="sextype != null">
				SexType,
			</if>
			<if test="email != null">
				Email,
			</if>
			<if test="idcard != null">
				IDCard,
			</if>
			<if test="headpic != null">
				HeadPic,
			</if>
			<if test="backgroundimg != null">
				BackGroundImg,
			</if>
			<if test="schooluid != null">
				SchoolUID,
			</if>
			<if test="schoolname != null">
				SchoolName,
			</if>
			<if test="collegeuid != null">
				CollegeUID,
			</if>
			<if test="collegename != null">
				CollegeName,
			</if>
			<if test="professionuid != null">
				ProfessionUID,
			</if>
			<if test="professionname != null">
				ProfessionName,
			</if>
			<if test="inschoolyear != null">
				InSchoolYear,
			</if>
			<if test="citycode != null">
				CityCode,
			</if>
			<if test="cityname != null">
				CityName,
			</if>
			<if test="provincecode != null">
				ProvinceCode,
			</if>
			<if test="provincename != null">
				ProvinceName,
			</if>
			<if test="isvalidated != null">
				IsValidated,
			</if>
			<if test="islocked != null">
				IsLocked,
			</if>
			<if test="isopen != null">
				IsOpen,
			</if>
			<if test="isgraduate != null">
				IsGraduate,
			</if>
			<if test="createby != null">
				CreateBy,
			</if>
			<if test="createdate != null">
				CreateDate,
			</if>
			<if test="lastupdateby != null">
				LastUpdateBy,
			</if>
			<if test="lastupdatedate != null">
				LastUpdateDate,
			</if>
			<if test="isactive != null">
				IsActive,
			</if>
			<if test="integral != null">
				Integral,
			</if>
			<if test="logincount != null">
				LoginCount,
			</if>
			<if test="apiType != null">
				ApiType,
			</if>
			<if test="apiId != null">
				ApiId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="useruid != null">
				#{useruid,jdbcType=VARCHAR},
			</if>
			<if test="studentid != null">
				#{studentid,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				#{realname,jdbcType=VARCHAR},
			</if>
			<if test="namepinyin != null">
				#{namepinyin,jdbcType=VARCHAR},
			</if>
			<if test="namefirstletter != null">
				#{namefirstletter,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="sextype != null">
				#{sextype,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="idcard != null">
				#{idcard,jdbcType=VARCHAR},
			</if>
			<if test="headpic != null">
				#{headpic,jdbcType=VARCHAR},
			</if>
			<if test="backgroundimg != null">
				#{backgroundimg,jdbcType=VARCHAR},
			</if>
			<if test="schooluid != null">
				#{schooluid,jdbcType=VARCHAR},
			</if>
			<if test="schoolname != null">
				#{schoolname,jdbcType=VARCHAR},
			</if>
			<if test="collegeuid != null">
				#{collegeuid,jdbcType=VARCHAR},
			</if>
			<if test="collegename != null">
				#{collegename,jdbcType=VARCHAR},
			</if>
			<if test="professionuid != null">
				#{professionuid,jdbcType=VARCHAR},
			</if>
			<if test="professionname != null">
				#{professionname,jdbcType=VARCHAR},
			</if>
			<if test="inschoolyear != null">
				#{inschoolyear,jdbcType=INTEGER},
			</if>
			<if test="citycode != null">
				#{citycode,jdbcType=VARCHAR},
			</if>
			<if test="cityname != null">
				#{cityname,jdbcType=VARCHAR},
			</if>
			<if test="provincecode != null">
				#{provincecode,jdbcType=VARCHAR},
			</if>
			<if test="provincename != null">
				#{provincename,jdbcType=VARCHAR},
			</if>
			<if test="isvalidated != null">
				#{isvalidated,jdbcType=INTEGER},
			</if>
			<if test="islocked != null">
				#{islocked,jdbcType=INTEGER},
			</if>
			<if test="isopen != null">
				#{isopen,jdbcType=INTEGER},
			</if>
			<if test="isgraduate != null">
				#{isgraduate,jdbcType=INTEGER},
			</if>
			<if test="createby != null">
				#{createby,jdbcType=VARCHAR},
			</if>
			<if test="createdate != null">
				#{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="lastupdateby != null">
				#{lastupdateby,jdbcType=VARCHAR},
			</if>
			<if test="lastupdatedate != null">
				#{lastupdatedate,jdbcType=TIMESTAMP},
			</if>
			<if test="isactive != null">
				#{isactive,jdbcType=INTEGER},
			</if>
			<if test="integral != null">
				#{integral,jdbcType=INTEGER},
			</if>
			<if test="logincount != null">
				#{logincount,jdbcType=INTEGER},
			</if>
			<if test="apiType != null">
				#{apiType,jdbcType=VARCHAR},
			</if>
			<if test="apiId != null">
				#{apiId,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.campus.model.User">
		update ts_app_user
		<set>
			<if test="studentid != null">
				StudentID = #{studentid,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				RealName = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="namepinyin != null">
				NamePinYin = #{namepinyin,jdbcType=VARCHAR},
			</if>
			<if test="namefirstletter != null">
				NameFirstLetter = #{namefirstletter,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				NickName = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="sextype != null">
				SexType = #{sextype,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				Email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="idcard != null">
				IDCard = #{idcard,jdbcType=VARCHAR},
			</if>
			<if test="headpic != null">
				HeadPic = #{headpic,jdbcType=VARCHAR},
			</if>
			<if test="backgroundimg != null">
				BackGroundImg = #{backgroundimg,jdbcType=VARCHAR},
			</if>
			<if test="schooluid != null">
				SchoolUID = #{schooluid,jdbcType=VARCHAR},
			</if>
			<if test="schoolname != null">
				SchoolName = #{schoolname,jdbcType=VARCHAR},
			</if>
			<if test="collegeuid != null">
				CollegeUID = #{collegeuid,jdbcType=VARCHAR},
			</if>
			<if test="collegename != null">
				CollegeName = #{collegename,jdbcType=VARCHAR},
			</if>
			<if test="professionuid != null">
				ProfessionUID = #{professionuid,jdbcType=VARCHAR},
			</if>
			<if test="professionname != null">
				ProfessionName = #{professionname,jdbcType=VARCHAR},
			</if>
			<if test="inschoolyear != null">
				InSchoolYear = #{inschoolyear,jdbcType=INTEGER},
			</if>
			<if test="citycode != null">
				CityCode = #{citycode,jdbcType=VARCHAR},
			</if>
			<if test="cityname != null">
				CityName = #{cityname,jdbcType=VARCHAR},
			</if>
			<if test="provincecode != null">
				ProvinceCode = #{provincecode,jdbcType=VARCHAR},
			</if>
			<if test="provincename != null">
				ProvinceName = #{provincename,jdbcType=VARCHAR},
			</if>
			<if test="isvalidated != null">
				IsValidated = #{isvalidated,jdbcType=INTEGER},
			</if>
			<if test="islocked != null">
				IsLocked = #{islocked,jdbcType=INTEGER},
			</if>
			<if test="isopen != null">
				IsOpen = #{isopen,jdbcType=INTEGER},
			</if>
			<if test="isgraduate != null">
				IsGraduate = #{isgraduate,jdbcType=INTEGER},
			</if>
			<if test="createby != null">
				CreateBy = #{createby,jdbcType=VARCHAR},
			</if>
			<if test="createdate != null">
				CreateDate = #{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="lastupdateby != null">
				LastUpdateBy = #{lastupdateby,jdbcType=VARCHAR},
			</if>
			<if test="lastupdatedate != null">
				LastUpdateDate = #{lastupdatedate,jdbcType=TIMESTAMP},
			</if>
			<if test="isactive != null">
				IsActive = #{isactive,jdbcType=INTEGER},
			</if>
			<if test="integral != null">
				Integral = #{integral,jdbcType=INTEGER},
			</if>
			<if test="logincount != null">
				LoginCount = #{logincount,jdbcType=INTEGER},
			</if>
			<if test="apiType != null">
				ApiType = #{apiType,jdbcType=VARCHAR},
			</if>
			<if test="apiId != null">
				ApiId = #{apiId,jdbcType=VARCHAR},
			</if>
		</set>
		where UserUID = #{useruid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.campus.model.User">
		update ts_app_user
		set StudentID = #{studentid,jdbcType=VARCHAR},
		RealName =
		#{realname,jdbcType=VARCHAR},
		NamePinYin =
		#{namepinyin,jdbcType=VARCHAR},
		NameFirstLetter =
		#{namefirstletter,jdbcType=VARCHAR},
		NickName =
		#{nickname,jdbcType=VARCHAR},
		SexType = #{sextype,jdbcType=VARCHAR},
		Email = #{email,jdbcType=VARCHAR},
		IDCard = #{idcard,jdbcType=VARCHAR},
		HeadPic = #{headpic,jdbcType=VARCHAR},
		BackGroundImg =
		#{backgroundimg,jdbcType=VARCHAR},
		SchoolUID =
		#{schooluid,jdbcType=VARCHAR},
		SchoolName =
		#{schoolname,jdbcType=VARCHAR},
		CollegeUID =
		#{collegeuid,jdbcType=VARCHAR},
		CollegeName =
		#{collegename,jdbcType=VARCHAR},
		ProfessionUID =
		#{professionuid,jdbcType=VARCHAR},
		ProfessionName =
		#{professionname,jdbcType=VARCHAR},
		InSchoolYear =
		#{inschoolyear,jdbcType=INTEGER},
		CityCode =
		#{citycode,jdbcType=VARCHAR},
		CityName = #{cityname,jdbcType=VARCHAR},
		ProvinceCode = #{provincecode,jdbcType=VARCHAR},
		ProvinceName =
		#{provincename,jdbcType=VARCHAR},
		IsValidated =
		#{isvalidated,jdbcType=INTEGER},
		IsLocked =
		#{islocked,jdbcType=INTEGER},
		IsOpen = #{isopen,jdbcType=INTEGER},
		IsGraduate = #{isgraduate,jdbcType=INTEGER},
		CreateBy =
		#{createby,jdbcType=VARCHAR},
		CreateDate =
		#{createdate,jdbcType=TIMESTAMP},
		LastUpdateBy =
		#{lastupdateby,jdbcType=VARCHAR},
		LastUpdateDate =
		#{lastupdatedate,jdbcType=TIMESTAMP},
		IsActive =
		#{isactive,jdbcType=INTEGER},
		Integral =
		#{integral,jdbcType=INTEGER},
		LoginCount =
		#{logincount,jdbcType=INTEGER},
		ApiType =
		#{apiType,jdbcType=VARCHAR},
		ApiId =
		#{apiId,jdbcType=VARCHAR}
		where
		UserUID =
		#{useruid,jdbcType=VARCHAR}
	</update>
	<select id="findMyFriends" resultMap="BaseResultMap">
		SELECT u.* from ts_app_user as u LEFT JOIN
		ts_app_attentionuser as a on
		u.UserUID=a.AttenionUserUID where
		a.MyUserUID=#{myUserId,jdbcType=VARCHAR}
		<if test="friendNickName != null and friendNickName != ''">
			AND u.NickName like
			CONCAT('%','${friendNickName}','%' )
		</if>
	</select>
	<select id="findMyFans" resultMap="BaseResultMap">
		SELECT u.* from ts_app_user as u LEFT JOIN ts_app_attentionuser as a
		on u.UserUID=a.MyUserUID WHERE
		a.AttenionUserUID=#{myUserId,jdbcType=VARCHAR}
		<if test="friendNickName != null and friendNickName != ''">
			AND u.NickName like
			CONCAT('%','${friendNickName}','%' )
		</if>
	</select>
	<select id="selectNickNameByPrimaryKey" resultType="java.lang.String"
		parameterType="java.lang.String">
		select
		NickName
		from ts_app_user
		where UserUID = #{useruid}
	</select>
</mapper>