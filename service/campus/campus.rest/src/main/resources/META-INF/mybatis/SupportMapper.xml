<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.campus.repository.SupportMapper">
	<resultMap id="BaseResultMap" type="org.campus.model.Support">
		<id column="UID" property="uid" jdbcType="VARCHAR" />
		<result column="SourceUID" property="sourceuid" jdbcType="VARCHAR" />
		<result column="SupportUserUID" property="supportuseruid"
			jdbcType="VARCHAR" />
		<result column="UserNickName" property="usernickname" jdbcType="VARCHAR" />
		<result column="TypeCode" property="typecode" jdbcType="INTEGER" />
		<result column="isActive" property="isactive" jdbcType="INTEGER" />
		<result column="CreateBy" property="createby" jdbcType="VARCHAR" />
		<result column="CreateDate" property="createdate" jdbcType="TIMESTAMP" />
		<result column="LastUpdateBy" property="lastupdateby" jdbcType="VARCHAR" />
		<result column="LastUpdateDate" property="lastupdatedate"
			jdbcType="TIMESTAMP" />
		<result column="SrcPostId" property="srcPostId" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		UID, SourceUID, SupportUserUID, UserNickName, TypeCode,
		isActive,
		CreateBy, CreateDate,
		LastUpdateBy, LastUpdateDate, SrcPostId,status
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from ts_app_support
		where UID = #{uid,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		ts_app_support
		where UID = #{uid,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="org.campus.model.Support">
		insert into ts_app_support
		(UID, SourceUID, SupportUserUID,
		UserNickName, TypeCode, isActive,
		CreateBy, CreateDate, LastUpdateBy,
		LastUpdateDate, SrcPostId,status)
		values
		(#{uid,jdbcType=VARCHAR}, #{sourceuid,jdbcType=VARCHAR},
		#{supportuseruid,jdbcType=VARCHAR},
		#{usernickname,jdbcType=VARCHAR},
		#{typecode,jdbcType=INTEGER}, #{isactive,jdbcType=INTEGER},
		#{createby,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP},
		#{lastupdateby,jdbcType=VARCHAR},
		#{lastupdatedate,jdbcType=TIMESTAMP},#{srcPostId,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="org.campus.model.Support">
		insert into ts_app_support
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				UID,
			</if>
			<if test="sourceuid != null">
				SourceUID,
			</if>
			<if test="supportuseruid != null">
				SupportUserUID,
			</if>
			<if test="usernickname != null">
				UserNickName,
			</if>
			<if test="typecode != null">
				TypeCode,
			</if>
			<if test="isactive != null">
				isActive,
			</if>
			<if test="createby != null">
				CreateBy,
			</if>
			<if test="createdate != null">
				CreateDate,
			</if>
			<if test="lastupdateby != null">
				LastUpdateBy,
			</if>
			<if test="lastupdatedate != null">
				LastUpdateDate,
			</if>
			<if test="srcPostId != null">
                SrcPostId,
            </if>
            <if test="status != null">
                status,
            </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				#{uid,jdbcType=VARCHAR},
			</if>
			<if test="sourceuid != null">
				#{sourceuid,jdbcType=VARCHAR},
			</if>
			<if test="supportuseruid != null">
				#{supportuseruid,jdbcType=VARCHAR},
			</if>
			<if test="usernickname != null">
				#{usernickname,jdbcType=VARCHAR},
			</if>
			<if test="typecode != null">
				#{typecode,jdbcType=INTEGER},
			</if>
			<if test="isactive != null">
				#{isactive,jdbcType=INTEGER},
			</if>
			<if test="createby != null">
				#{createby,jdbcType=VARCHAR},
			</if>
			<if test="createdate != null">
				#{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="lastupdateby != null">
				#{lastupdateby,jdbcType=VARCHAR},
			</if>
			<if test="lastupdatedate != null">
				#{lastupdatedate,jdbcType=TIMESTAMP},
			</if>
			<if test="srcPostId != null">
                #{srcPostId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.campus.model.Support">
		update ts_app_support
		<set>
			<if test="sourceuid != null">
				SourceUID = #{sourceuid,jdbcType=VARCHAR},
			</if>
			<if test="supportuseruid != null">
				SupportUserUID = #{supportuseruid,jdbcType=VARCHAR},
			</if>
			<if test="usernickname != null">
				UserNickName = #{usernickname,jdbcType=VARCHAR},
			</if>
			<if test="typecode != null">
				TypeCode = #{typecode,jdbcType=INTEGER},
			</if>
			<if test="isactive != null">
				isActive = #{isactive,jdbcType=INTEGER},
			</if>
			<if test="createby != null">
				CreateBy = #{createby,jdbcType=VARCHAR},
			</if>
			<if test="createdate != null">
				CreateDate = #{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="lastupdateby != null">
				LastUpdateBy = #{lastupdateby,jdbcType=VARCHAR},
			</if>
			<if test="lastupdatedate != null">
				LastUpdateDate = #{lastupdatedate,jdbcType=TIMESTAMP},
			</if>
			<if test="srcPostId != null">
                SrcPostId = #{srcPostId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
		</set>
		where UID = #{uid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.campus.model.Support">
		update
		ts_app_support
		set SourceUID = #{sourceuid,jdbcType=VARCHAR},
		SupportUserUID = #{supportuseruid,jdbcType=VARCHAR},
		UserNickName =
		#{usernickname,jdbcType=VARCHAR},
		TypeCode =
		#{typecode,jdbcType=INTEGER},
		isActive = #{isactive,jdbcType=INTEGER},
		CreateBy = #{createby,jdbcType=VARCHAR},
		CreateDate =
		#{createdate,jdbcType=TIMESTAMP},
		LastUpdateBy =
		#{lastupdateby,jdbcType=VARCHAR},
		LastUpdateDate =
		#{lastupdatedate,jdbcType=TIMESTAMP},
		SrcPostId =
        #{srcPostId,jdbcType=VARCHAR},
        status =
        #{status,jdbcType=VARCHAR}
		where UID =
		#{uid,jdbcType=VARCHAR}
	</update>
	<select id="getSupportNum" resultType="int" parameterType="java.lang.String">
		select
		count(1)
		from ts_app_support
		where SourceUID =
		#{sourceId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteAll">
		delete from
		ts_app_support
	</delete>
	<select id="countMyCommentSupport" resultType="int">
		select
		count(1)
		from ts_app_support
		where SourceUID =
		#{sourceId,jdbcType=VARCHAR}
	</select>
	<select id="isSupported" resultType="int">
		select
		count(1)
		from
		ts_app_support
		where SourceUID =
		#{sourceId,jdbcType=VARCHAR} AND
		SupportUserUID=#{userId,jdbcType=VARCHAR}
	</select>
	<delete id="delete">
		delete from
		ts_app_support
		where SourceUID =
		#{sourceId,jdbcType=VARCHAR} AND
		SupportUserUID=#{userId,jdbcType=VARCHAR}
	</delete>
	<select id="findSupportPostsMsg" resultMap="BaseResultMap">
		SELECT s.* FROM
		ts_app_support as s
		LEFT JOIN ts_app_freshnews as f ON s.SourceUID =
		f.UID
		WHERE f.AddUserUID=#{userId,jdbcType=VARCHAR}
		ORDER BY
		s.CreateDate desc
	</select>
	<select id="findSupportCommentMsgVO" resultMap="BaseResultMap">
		SELECT s.* FROM
		ts_app_support as s
		LEFT JOIN ts_app_comment as c ON s.SourceUID =
		c.UID
		WHERE c.ComUserUID=#{userId,jdbcType=VARCHAR}
		ORDER BY
		s.CreateDate desc
	</select>
	<select id="countSupportPostMsgVO" parameterType="java.lang.String" resultType="int">
        SELECT count(1) FROM
        ts_app_support as s
        LEFT JOIN ts_app_freshnews as f ON s.SourceUID =
        f.UID
        WHERE f.AddUserUID=#{userId,jdbcType=VARCHAR} and s.status='0'
        ORDER BY
        s.CreateDate desc
    </select>
    <select id="countSupportCommentMsgVO" parameterType="java.lang.String" resultType="int">
        SELECT count(1) FROM
        ts_app_support as s
        LEFT JOIN ts_app_comment as c ON s.SourceUID =
        c.UID
        WHERE c.ComUserUID=#{userId,jdbcType=VARCHAR} and s.status='0'
        ORDER BY
        s.CreateDate desc
    </select>
    <select id="findSupportPostsMsgList" resultMap="BaseResultMap">
        SELECT s.* FROM
        ts_app_support as s
        LEFT JOIN ts_app_freshnews as f ON s.SourceUID =
        f.UID
        WHERE f.AddUserUID=#{userId,jdbcType=VARCHAR}
        ORDER BY
        s.CreateDate desc
    </select>
    <select id="findSupportCommentMsgVOList" resultMap="BaseResultMap">
        SELECT s.* FROM
        ts_app_support as s
        LEFT JOIN ts_app_comment as c ON s.SourceUID =
        c.UID
        WHERE c.ComUserUID=#{userId,jdbcType=VARCHAR}
        ORDER BY
        s.CreateDate desc
    </select>
</mapper>